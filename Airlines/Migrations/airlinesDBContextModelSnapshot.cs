// <auto-generated />
using Airlines.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Airlines.Migrations
{
    [DbContext(typeof(airlinesDBContext))]
    partial class airlinesDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Airlines.Models.Билеты", b =>
                {
                    b.Property<int>("ПаспортныеДанные")
                        .HasColumnName("паспортные_данные")
                        .HasColumnType("INT");

                    b.Property<int>("КодРейса")
                        .HasColumnName("код_рейса")
                        .HasColumnType("INT");

                    b.Property<int>("Место")
                        .HasColumnName("место")
                        .HasColumnType("INT");

                    b.Property<int>("ФиоПассажира")
                        .HasColumnName("ФИО_пассажира")
                        .HasColumnType("INT");

                    b.Property<int>("Цена")
                        .HasColumnName("цена")
                        .HasColumnType("INT");

                    b.HasKey("ПаспортныеДанные");

                    b.HasIndex("КодРейса")
                        .IsUnique();

                    b.ToTable("Билеты");
                });

            modelBuilder.Entity("Airlines.Models.Должности", b =>
                {
                    b.Property<int>("КодДолжности")
                        .HasColumnName("код_должности")
                        .HasColumnType("INT");

                    b.Property<int>("КодЭкипажа")
                        .HasColumnName("код_экипажа")
                        .HasColumnType("INT");

                    b.Property<int>("НаименованиеДолжности")
                        .HasColumnName("наименование_должности")
                        .HasColumnType("INT");

                    b.Property<int>("Обязанности")
                        .HasColumnName("обязанности")
                        .HasColumnType("INT");

                    b.Property<int>("Оклад")
                        .HasColumnName("оклад")
                        .HasColumnType("INT");

                    b.Property<int>("Требования")
                        .HasColumnName("требования")
                        .HasColumnType("INT");

                    b.HasKey("КодДолжности");

                    b.HasIndex("КодЭкипажа");

                    b.ToTable("Должности");
                });

            modelBuilder.Entity("Airlines.Models.Рейсы", b =>
                {
                    b.Property<int>("КодРейса")
                        .HasColumnName("код_рейса")
                        .HasColumnType("INT");

                    b.Property<int>("Время")
                        .HasColumnName("время")
                        .HasColumnType("INT");

                    b.Property<int>("ВремяПолёта")
                        .HasColumnName("время_полёта")
                        .HasColumnType("INT");

                    b.Property<int>("Дата")
                        .HasColumnName("дата")
                        .HasColumnType("INT");

                    b.Property<int>("КодСамолёта")
                        .HasColumnName("код_самолёта")
                        .HasColumnType("INT");

                    b.Property<int>("КодЭкипажа")
                        .HasColumnName("код_экипажа")
                        .HasColumnType("INT");

                    b.Property<int>("Куда")
                        .HasColumnName("куда")
                        .HasColumnType("INT");

                    b.Property<int>("Откуда")
                        .HasColumnName("откуда")
                        .HasColumnType("INT");

                    b.HasKey("КодРейса");

                    b.HasIndex("КодЭкипажа")
                        .IsUnique();

                    b.ToTable("Рейсы");
                });

            modelBuilder.Entity("Airlines.Models.Самолёты", b =>
                {
                    b.Property<int>("КодСотрудников")
                        .HasColumnName("код_сотрудников")
                        .HasColumnType("INT");

                    b.Property<int>("Вместимость")
                        .HasColumnName("вместимость")
                        .HasColumnType("INT");

                    b.Property<int>("Грузоподъёмность")
                        .HasColumnName("грузоподъёмность")
                        .HasColumnType("INT");

                    b.Property<int>("ДатаВыпуска")
                        .HasColumnName("дата_выпуска")
                        .HasColumnType("INT");

                    b.Property<int>("ДатаПоследнегоРемонта")
                        .HasColumnName("дата_последнего_ремонта")
                        .HasColumnType("INT");

                    b.Property<int>("КодРейса")
                        .HasColumnName("код_рейса")
                        .HasColumnType("INT");

                    b.Property<int>("КодСамолёта")
                        .HasColumnName("код_самолёта")
                        .HasColumnType("INT");

                    b.Property<int>("КодТипа")
                        .HasColumnName("код_типа")
                        .HasColumnType("INT");

                    b.Property<int>("Марка")
                        .HasColumnName("марка")
                        .HasColumnType("INT");

                    b.Property<int>("НалётаноЧасов")
                        .HasColumnName("налётано_часов")
                        .HasColumnType("INT");

                    b.Property<int>("ПаспортныеДанные")
                        .HasColumnName("паспортные_данные")
                        .HasColumnType("INT");

                    b.Property<int>("ТехническиеХарактиристики")
                        .HasColumnName("технические_характиристики")
                        .HasColumnType("INT");

                    b.HasKey("КодСотрудников");

                    b.HasIndex("КодРейса");

                    b.HasIndex("КодСамолёта")
                        .IsUnique();

                    b.HasIndex("КодТипа")
                        .IsUnique();

                    b.HasIndex("ПаспортныеДанные");

                    b.ToTable("Самолёты");
                });

            modelBuilder.Entity("Airlines.Models.Сотрудники", b =>
                {
                    b.Property<int>("КодСотрудников")
                        .HasColumnName("код_сотрудников")
                        .HasColumnType("INT");

                    b.Property<int>("Адрес")
                        .HasColumnName("адрес")
                        .HasColumnType("INT");

                    b.Property<int>("Возраст")
                        .HasColumnName("возраст")
                        .HasColumnType("INT");

                    b.Property<int>("КодДолжности")
                        .HasColumnName("код_должности")
                        .HasColumnType("INT");

                    b.Property<int>("ПаспортныеДанные")
                        .HasColumnName("паспортные_данные")
                        .HasColumnType("INT");

                    b.Property<int>("Пол")
                        .HasColumnName("пол")
                        .HasColumnType("INT");

                    b.Property<int>("Телефон")
                        .HasColumnName("телефон")
                        .HasColumnType("INT");

                    b.Property<int>("Фио")
                        .HasColumnName("ФИО")
                        .HasColumnType("INT");

                    b.HasKey("КодСотрудников");

                    b.HasIndex("КодДолжности");

                    b.HasIndex("ПаспортныеДанные")
                        .IsUnique();

                    b.ToTable("Сотрудники");
                });

            modelBuilder.Entity("Airlines.Models.ТипыСамолётов", b =>
                {
                    b.Property<int>("КодТипа")
                        .HasColumnName("код_типа")
                        .HasColumnType("INT");

                    b.Property<int>("Назначение")
                        .HasColumnName("назначение")
                        .HasColumnType("INT");

                    b.Property<int>("Наименование")
                        .HasColumnName("наименование")
                        .HasColumnType("INT");

                    b.Property<int>("Ограничения")
                        .HasColumnName("ограничения")
                        .HasColumnType("INT");

                    b.HasKey("КодТипа");

                    b.ToTable("Типы_самолётов");
                });

            modelBuilder.Entity("Airlines.Models.Экипажи", b =>
                {
                    b.Property<int>("КодЭкипажа")
                        .HasColumnName("код_экипажа")
                        .HasColumnType("INT");

                    b.Property<int>("КодСотрудника1")
                        .HasColumnName("код_сотрудника_1")
                        .HasColumnType("INT");

                    b.Property<int>("КодСотрудника2")
                        .HasColumnName("код_сотрудника_2")
                        .HasColumnType("INT");

                    b.Property<int>("КодСотрудника3")
                        .HasColumnName("код_сотрудника_3")
                        .HasColumnType("INT");

                    b.Property<int>("НалётаноЧасов")
                        .HasColumnName("налётано_часов")
                        .HasColumnType("INT");

                    b.Property<int>("ПаспортныеДанные")
                        .HasColumnName("паспортные_данные")
                        .HasColumnType("INT");

                    b.HasKey("КодЭкипажа");

                    b.HasIndex("КодСотрудника1");

                    b.HasIndex("КодСотрудника2");

                    b.HasIndex("КодСотрудника3");

                    b.HasIndex("ПаспортныеДанные");

                    b.ToTable("Экипажи");
                });

            modelBuilder.Entity("Airlines.Models.Билеты", b =>
                {
                    b.HasOne("Airlines.Models.Рейсы", "КодРейсаNavigation")
                        .WithOne("Билеты")
                        .HasForeignKey("Airlines.Models.Билеты", "КодРейса")
                        .IsRequired();
                });

            modelBuilder.Entity("Airlines.Models.Должности", b =>
                {
                    b.HasOne("Airlines.Models.Экипажи", "КодЭкипажаNavigation")
                        .WithMany("Должности")
                        .HasForeignKey("КодЭкипажа")
                        .IsRequired();
                });

            modelBuilder.Entity("Airlines.Models.Самолёты", b =>
                {
                    b.HasOne("Airlines.Models.Рейсы", "КодРейсаNavigation")
                        .WithMany("Самолёты")
                        .HasForeignKey("КодРейса")
                        .IsRequired();

                    b.HasOne("Airlines.Models.Сотрудники", "КодСотрудниковNavigation")
                        .WithOne("Самолёты")
                        .HasForeignKey("Airlines.Models.Самолёты", "КодСотрудников")
                        .IsRequired();

                    b.HasOne("Airlines.Models.ТипыСамолётов", "КодТипаNavigation")
                        .WithOne("Самолёты")
                        .HasForeignKey("Airlines.Models.Самолёты", "КодТипа")
                        .IsRequired();

                    b.HasOne("Airlines.Models.Билеты", "ПаспортныеДанныеNavigation")
                        .WithMany("Самолёты")
                        .HasForeignKey("ПаспортныеДанные")
                        .IsRequired();
                });

            modelBuilder.Entity("Airlines.Models.Сотрудники", b =>
                {
                    b.HasOne("Airlines.Models.Должности", "КодДолжностиNavigation")
                        .WithMany("Сотрудники")
                        .HasForeignKey("КодДолжности")
                        .IsRequired();
                });

            modelBuilder.Entity("Airlines.Models.Экипажи", b =>
                {
                    b.HasOne("Airlines.Models.Самолёты", "КодСотрудника1Navigation")
                        .WithMany("ЭкипажиКодСотрудника1Navigation")
                        .HasForeignKey("КодСотрудника1")
                        .IsRequired();

                    b.HasOne("Airlines.Models.Самолёты", "КодСотрудника2Navigation")
                        .WithMany("ЭкипажиКодСотрудника2Navigation")
                        .HasForeignKey("КодСотрудника2")
                        .IsRequired();

                    b.HasOne("Airlines.Models.Самолёты", "КодСотрудника3Navigation")
                        .WithMany("ЭкипажиКодСотрудника3Navigation")
                        .HasForeignKey("КодСотрудника3")
                        .IsRequired();

                    b.HasOne("Airlines.Models.Билеты", "ПаспортныеДанныеNavigation")
                        .WithMany("Экипажи")
                        .HasForeignKey("ПаспортныеДанные")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
